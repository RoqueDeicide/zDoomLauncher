<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Launcher">
	<Style TargetType="{x:Type local:NumericUpDown}">
		<Setter Property="Value" Value="0"/>
		<Setter Property="Minimum" Value="0"/>
		<Setter Property="Maximum" Value="100"/>
		<Setter Property="Step" Value="1"/>
		<Setter Property="RestartPosition" Value="{x:Null}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"/>
		<Setter Property="PressedBrush" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
		<Setter Property="DisabledBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}"/>
		<Setter Property="HighlightedBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
		<Setter Property="BorderBrush" Value="#FF707070" />
		<Setter Property="Height" Value="24"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:NumericUpDown}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="300*" />
							<ColumnDefinition Width="20" />
						</Grid.ColumnDefinitions>
						<TextBox Grid.Column="0" Name="ValueTextBox"
								 BorderBrush="{TemplateBinding BorderBrush}"
								 Foreground="{TemplateBinding Foreground}"
								 Background="{TemplateBinding Background}"/>
						<Grid Grid.Column="1" Panel.ZIndex="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="1*"/>
								<RowDefinition Height="1*"/>
							</Grid.RowDefinitions>
							<Border Grid.RowSpan="2"
									BorderBrush="{TemplateBinding BorderBrush}"
									CornerRadius="0.95" BorderThickness="1">
								<Border.Background>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFF3F3F3" Offset="0"/>
										<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
										<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
										<GradientStop Color="#FFCDCDCD" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<local:SpinnerButton Name="UpButton" Grid.Row="0" IsUp="true"
											 Foreground="{TemplateBinding Foreground}"
											 HighlightedBrush="{TemplateBinding HighlightedBrush}"
											 PressedBrush="{TemplateBinding PressedBrush}"
											 DisabledBrush="{TemplateBinding DisabledBrush}"/>
							<local:SpinnerButton Name="DownButton" Grid.Row="1" IsUp="false"
											 Foreground="{TemplateBinding Foreground}"
											 HighlightedBrush="{TemplateBinding HighlightedBrush}"
											 PressedBrush="{TemplateBinding PressedBrush}"
											 DisabledBrush="{TemplateBinding DisabledBrush}"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:SpinnerButton}">
		<Setter Property="Geometry" Value="30,20 50,70 70,20"/>
        <Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="{x:Type local:SpinnerButton}">
					<Viewbox Stretch="Fill">
						<Grid>
							<Polygon Name="Triangle" Points="{TemplateBinding Geometry}"
									 Fill="{TemplateBinding Foreground}"
									 HorizontalAlignment="Center"
									 VerticalAlignment="Center"
									 Width="100"
									 Height="100"/>
							<Border Background="Transparent"/>
						</Grid>
					</Viewbox>
				</ControlTemplate>
            </Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsUp" Value="True">
				<Setter Property="Geometry" Value="30,80 50,30 70,80"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=HighlightedBrush}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=PressedBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=DisabledBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>